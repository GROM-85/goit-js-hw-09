{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAS,CAACC,EAAQC,KACzBC,YAAW,KACLN,EACFI,EAAQ,sBAAsBN,QAAeC,MAE7CM,EAAO,oBAAoBP,QAAeC,IAAO,GAEnDA,EAAA,GAGR,CAEA,SAASQ,EAAYC,GACnBC,EAAAd,GAASe,OAAOC,QAAQH,EAC1B,CAEA,SAASI,EAAWC,GAClBJ,EAAAd,GAASe,OAAOI,QAAQD,EAC1B,CAvBaE,SAASC,cAAc,SA2C/BC,iBAAiB,UAlBtB,SAAyBC,GACvBA,EAAMC,iBACN,IAAIpB,MAACA,EAAKqB,KAACA,EAAIC,OAACA,GAAUH,EAAMI,cAAcC,SAE1CC,EAAYC,OAAO1B,EAAM2B,OACzBC,EAAYF,OAAOL,EAAKM,OACxBE,EAAWH,OAAOJ,EAAOK,OAE7B,IAAI,IAAIG,EAAM,EAAGA,GAAOD,EAAUC,IAChChC,EAAcgC,EAAKL,GAClBM,KAAKvB,GACLwB,MAAMnB,GAEPY,GAAaG,EAEfT,EAAMI,cAAcU,OACtB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise ((resolve,reject)=>{\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`Fullfilled promise ${position} on ${delay}!`);\n        } else {\n          reject(`Rejected promise ${position} on ${delay}`);\n        }\n      },delay)\n    \n  })  \n}\n\nfunction onFullfiled(result){\n  Notiflix.Notify.success(result); \n}\n\nfunction onRejected(error){\n  Notiflix.Notify.failure(error);\n}\n\nfunction onSubmitHandler(event){\n  event.preventDefault();\n  let {delay,step,amount} = event.currentTarget.elements;\n  \n  let timeDelay = Number(delay.value);\n  let increment = Number(step.value);\n  let quantity = Number(amount.value);\n  \n  for(let pos = 1; pos <= quantity; pos++){\n    createPromise(pos, timeDelay)\n    .then(onFullfiled)\n    .catch(onRejected);\n    \n    timeDelay += increment;\n  }  \n  event.currentTarget.reset()\n}\n\nform.addEventListener(\"submit\",onSubmitHandler);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onFullfiled","result","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onRejected","error","failure","document","querySelector","addEventListener","event","preventDefault","step","amount","currentTarget","elements","timeDelay","Number","value","increment","quantity","pos","then","catch","reset"],"version":3,"file":"03-promises.843119af.js.map"}